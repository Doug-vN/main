<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sensor" kind="class" language="C++" prot="public">
    <compoundname>Sensor</compoundname>
    <basecompoundref refid="class_instructable" prot="public" virt="non-virtual">Instructable</basecompoundref>
    <basecompoundref refid="class_instructor" prot="public" virt="non-virtual">Instructor</basecompoundref>
    <basecompoundref refid="class_data_source" prot="public" virt="non-virtual">DataSource</basecompoundref>
    <basecompoundref refid="class_identifiable" prot="public" virt="non-virtual">Identifiable</basecompoundref>
    <includes refid="_sensor_8h" local="no">Sensor.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sensor_1a370005d04d3566c21b9190e1442fa4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Sensor</definition>
        <argsstring>(const int ChipSelect)</argsstring>
        <name>Sensor</name>
        <param>
          <type>const int</type>
          <declname>ChipSelect</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ChipSelect</parametername>
</parameternamelist>
<parameterdescription>
<para>is the Slave Select pin of the SPI peripheral in question. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sensor.h" line="36" column="1" bodyfile="Sensor.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="class_sensor_1af0e64874a3d1b8ae19e3b623d244342a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int StartMeasurement</definition>
        <argsstring>(void)</argsstring>
        <name>StartMeasurement</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Instruct the sensor to initiate the measurement procedure. </para>
        </briefdescription>
        <detaileddescription>
<para>Informs the sensor to start the measurement procedure and proceed to the first instruction step. <simplesect kind="return"><para>True if the sensor acknowledges the request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sensor.h" line="43" column="1" bodyfile="Sensor.cpp" bodystart="26" bodyend="32"/>
        <references refid="class_instructable_1a26afb4fb25fe8a13e268544d0850fe3f" compoundref="_instructable_8cpp" startline="19" endline="29">Instructable::issueCommand</references>
        <references refid="_s_p_i___instruction_set_8h_1afefab269eb3692ecb3e5fcdbb9440792a95e0f581b12f62fe8be32f5f50b8381e" compoundref="_s_p_i___instruction_set_8h" startline="39">BeginMeasurement</references>
      </memberdef>
      <memberdef kind="function" id="class_sensor_1afdcc3b63357bd24f519e0cbc85454a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PauseMeasurementForMillis</definition>
        <argsstring>(int)</argsstring>
        <name>PauseMeasurementForMillis</name>
        <param>
          <type>int</type>
          <defname>PauseTime</defname>
        </param>
        <briefdescription>
<para>Instruct the sensor to pause the measurement procedure for a brief period. </para>
        </briefdescription>
        <detaileddescription>
<para>Instructs the sensor to temporarily pause the measurement procedure for a period defined in milliseconds. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>is the number of milliseconds for which the sensor is to pause. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the sensor acknowledges the request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sensor.h" line="50" column="1" bodyfile="Sensor.cpp" bodystart="34" bodyend="38"/>
        <references refid="class_instructable_1a26afb4fb25fe8a13e268544d0850fe3f" compoundref="_instructable_8cpp" startline="19" endline="29">Instructable::issueCommand</references>
        <references refid="_s_p_i___instruction_set_8h_1afefab269eb3692ecb3e5fcdbb9440792a965f2ec6e1a55050b8bccd7063f904b3" compoundref="_s_p_i___instruction_set_8h" startline="30">PauseMeasurementForiParam</references>
      </memberdef>
      <memberdef kind="function" id="class_sensor_1ad58e9acfc23f07af433f0e2596d786d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int RestartMeasurement</definition>
        <argsstring>(void)</argsstring>
        <name>RestartMeasurement</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Instruct the sensor to restart the measurement procedure. </para>
        </briefdescription>
        <detaileddescription>
<para>Instructs the sensor to restart the measurement procedure. The sensor will wait revert to its initial state, waiting for a <ref refid="class_sensor_1af0e64874a3d1b8ae19e3b623d244342a" kindref="member">StartMeasurement()</ref> command before proceeding to the first instruction in the procedure. <simplesect kind="return"><para>True if the sensor acknowledges the request. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Sensor.h" line="57" column="1" bodyfile="Sensor.cpp" bodystart="40" bodyend="44"/>
        <references refid="class_instructable_1a26afb4fb25fe8a13e268544d0850fe3f" compoundref="_instructable_8cpp" startline="19" endline="29">Instructable::issueCommand</references>
        <references refid="_s_p_i___instruction_set_8h_1afefab269eb3692ecb3e5fcdbb9440792a4ad074804da746cc861dbb972ac48a22" compoundref="_s_p_i___instruction_set_8h" startline="31">RestartMeasurementProcedure</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class which models a Sensor/peripheral. </para>
    </briefdescription>
    <detaileddescription>
<para>This class models a sensor peripheral as an entity which has a queriable <ref refid="struct_identity" kindref="compound">Identity</ref>, is a source of <ref refid="struct_data" kindref="compound">Data</ref>, can be issued commands and can issue a series of instructions in turn. In particular, a sensor is considered to perform a measurement procedure consisting of a series of steps; at each step, the sensor will issue instructions to the master to be acted upon and/or displayed to the user. The sensor may also require feedback from the user such as confirmation of the completion of an instruction, before proceeding to the next instruction in the measurement procedure. While the sensor dictates the flow of the measurement procedure, a master reserves the right to initiate the procedure, pause the procedure and restart the procedure. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="28">
        <label>Identifiable</label>
        <link refid="class_identifiable"/>
      </node>
      <node id="24">
        <label>Sensor</label>
        <link refid="class_sensor"/>
        <childnode refid="25" relation="public-inheritance">
        </childnode>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>Instructable</label>
        <link refid="class_instructable"/>
      </node>
      <node id="26">
        <label>Instructor</label>
        <link refid="class_instructor"/>
      </node>
      <node id="27">
        <label>DataSource</label>
        <link refid="class_data_source"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="33">
        <label>Identifiable</label>
        <link refid="class_identifiable"/>
      </node>
      <node id="29">
        <label>Sensor</label>
        <link refid="class_sensor"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>Instructable</label>
        <link refid="class_instructable"/>
      </node>
      <node id="31">
        <label>Instructor</label>
        <link refid="class_instructor"/>
      </node>
      <node id="32">
        <label>DataSource</label>
        <link refid="class_data_source"/>
      </node>
    </collaborationgraph>
    <location file="Sensor.h" line="28" column="1" bodyfile="Sensor.h" bodystart="27" bodyend="62"/>
    <listofallmembers>
      <member refid="class_instructable_1a2bdcc11cead0067e963c524968d0d3e1" prot="public" virt="non-virtual"><scope>Sensor</scope><name>areYouConnected</name></member>
      <member refid="class_data_source_1a9c3258c608e4fdf9436e8cd32d677e7d" prot="public" virt="non-virtual"><scope>Sensor</scope><name>DataSource</name></member>
      <member refid="class_instructor_1ae81f8123893b582fd32a71601471cff8" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getCurrentCommandFloat</name></member>
      <member refid="class_instructor_1a1e54d05ded7ecf88f0205b52901df681" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getCurrentCommandInstruction</name></member>
      <member refid="class_instructor_1adcbf1cb6d2739539465edc6d996d2987" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getCurrentCommandInt</name></member>
      <member refid="class_instructor_1a8c66f480a7b5a6b434f613bc7197e824" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getCurrentCommandString</name></member>
      <member refid="class_data_source_1a83bdf3c6a0c54d468dad3e73509c90e6" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getDataArray</name></member>
      <member refid="class_data_source_1a924875bd657b56f140604551270cdbc0" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getDataVector</name></member>
      <member refid="class_identifiable_1a85d8439d79bd15eeb1c40d694d3d49ae" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getIDNumber</name></member>
      <member refid="class_data_source_1ac15f241362d7c22c75c42c2bb16315bf" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getNumberOfDataColumns</name></member>
      <member refid="class_data_source_1a52269fa43b741f1ab431aac56d3aedb5" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getNumberOfDataRows</name></member>
      <member refid="class_data_source_1acdeb2ae03f2c70d19565381d111a1a4d" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getRowHeadings</name></member>
      <member refid="class_data_source_1abf7e2f4954b1c314fba8f0ac3194306e" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getRowUnits</name></member>
      <member refid="class_identifiable_1a7942e337c1303ce42cc822032465c66a" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getSensorName</name></member>
      <member refid="class_data_source_1ac70e056b629dd62379c42af3e6ca6b1b" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getValueOne</name></member>
      <member refid="class_data_source_1ad7870f61cbf33ac7a284b47930ff5bcf" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getValueThree</name></member>
      <member refid="class_data_source_1accbfa79e7afee154b4332483181f27ec" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getValueTwo</name></member>
      <member refid="class_data_source_1a79d69573a651290750aa8c08d24f3b64" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getVectorHeading</name></member>
      <member refid="class_data_source_1a49998f22c00d924daf7b67af48e10a30" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getVectorLength</name></member>
      <member refid="class_data_source_1af2a2f33b9970ecff75894134498ff2cd" prot="public" virt="non-virtual"><scope>Sensor</scope><name>getVectorUnits</name></member>
      <member refid="class_identifiable_1adbc1a3f62e543a0df002a43413998a26" prot="public" virt="non-virtual"><scope>Sensor</scope><name>hasIdentityChanged</name></member>
      <member refid="class_instructor_1a2e9afbb8e6ce1c671e8e9dc29cf4715f" prot="public" virt="non-virtual"><scope>Sensor</scope><name>howLongShouldIWait</name></member>
      <member refid="class_instructor_1abfe73e27d6364bf5cad80f30f6833ec8" prot="public" virt="non-virtual"><scope>Sensor</scope><name>howManyInstructions</name></member>
      <member refid="class_identifiable_1a107ce612ee60e9be98085abdfbfdc83e" prot="public" virt="non-virtual"><scope>Sensor</scope><name>Identifiable</name></member>
      <member refid="class_instructable_1a688587b062ae8f3979bf7567041b86c1" prot="public" virt="non-virtual"><scope>Sensor</scope><name>Instructable</name></member>
      <member refid="class_instructor_1afd38d621d3d07ecb0e9c7f522a1b1823" prot="public" virt="non-virtual"><scope>Sensor</scope><name>Instructor</name></member>
      <member refid="class_instructable_1a26afb4fb25fe8a13e268544d0850fe3f" prot="public" virt="non-virtual"><scope>Sensor</scope><name>issueCommand</name></member>
      <member refid="class_instructable_1ae1de225deda4decc52ce8e06efa8c547" prot="public" virt="non-virtual"><scope>Sensor</scope><name>issueCommand</name></member>
      <member refid="class_instructable_1a556e6313ec5ac21a30efe8a5ef28a486" prot="public" virt="non-virtual"><scope>Sensor</scope><name>issueCommand</name></member>
      <member refid="class_instructable_1ac2d69c105880162fed7b7be07228cfa7" prot="public" virt="non-virtual"><scope>Sensor</scope><name>issueCommand</name></member>
      <member refid="class_data_source_1a7d92295e088894b5417729a814e49e01" prot="public" virt="non-virtual"><scope>Sensor</scope><name>isThereData</name></member>
      <member refid="class_data_source_1a81aac807bfb601c2ac1da78f69d31d48" prot="public" virt="non-virtual"><scope>Sensor</scope><name>loadData</name></member>
      <member refid="class_instructor_1a43cbe18547a30108219f3aa2945fc9ca" prot="public" virt="non-virtual"><scope>Sensor</scope><name>loadNextCommand</name></member>
      <member refid="class_sensor_1afdcc3b63357bd24f519e0cbc85454a52" prot="public" virt="non-virtual"><scope>Sensor</scope><name>PauseMeasurementForMillis</name></member>
      <member refid="class_sensor_1ad58e9acfc23f07af433f0e2596d786d7" prot="public" virt="non-virtual"><scope>Sensor</scope><name>RestartMeasurement</name></member>
      <member refid="class_sensor_1a370005d04d3566c21b9190e1442fa4e8" prot="public" virt="non-virtual"><scope>Sensor</scope><name>Sensor</name></member>
      <member refid="class_sensor_1af0e64874a3d1b8ae19e3b623d244342a" prot="public" virt="non-virtual"><scope>Sensor</scope><name>StartMeasurement</name></member>
      <member refid="class_identifiable_1ae99f8914426041ea02932d0ed00b29c3" prot="public" virt="non-virtual"><scope>Sensor</scope><name>updateIdentity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
